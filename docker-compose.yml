version: '3.8'

services:
  caddy:
    hostname: ocr_caddy
    container_name: ocr_caddy
    image: caddy:2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    env_file: environment/.env
    volumes:
      - $PWD/docker/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

  web:
    hostname: ocr_web
    container_name: ocr_web
    image: medical_certificates:web
    restart: unless-stopped
    build:
      context: .
      dockerfile: docker/Dockerfile
    depends_on:
      - redis
    env_file: environment/.env
    volumes:
      - app-data:/app/img
    command: ["gunicorn", "app:fastapi_app", "--workers", "1", "--worker-class", "uvicorn.workers.UvicornWorker", "--bind", "0.0.0.0:8000"]

  worker:
    hostname: ocr_worker
    container_name: ocr_worker
    image: medical_certificates:worker
    restart: unless-stopped
    build:
      context: .
      dockerfile: docker/Dockerfile
    depends_on:
      - redis
    env_file: environment/.env
    volumes:
      - app-data:/app/img
    command: ["celery", "-A", "app.celery_app", "worker"]
      
  redis:
    hostname: ocr_redis
    container_name: ocr_redis
    image: redis:alpine
    restart: unless-stopped
    command: ["redis-server"]

volumes:
  app-data:
  caddy_data:
  caddy_config: